{"version":3,"sources":["components/Header.js","components/HelperFuncs.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","level","id","recievedCurrentScore","remainingPeople","recievedBestScore","Helpers","createRedScreen","main","document","querySelector","redScreen","createElement","setAttribute","appendChild","setTimeout","remove","minimizeCards","cards","querySelectorAll","forEach","card","style","transitionDuration","transform","Card","handleClick","a","objArray","JSON","parse","localStorage","getItem","scoresArray","number","clicked","currentScore","roundScore","bestScore","console","log","setItem","stringify","characterArray","levelCleared","randomize","firstClick","counter","secondClick","alert","charName","onClick","src","charURL","CardContainer","numArray","useState","orderedArray","setOrderedArray","setLevel","useEffect","getLevelNums","updateLevel","prevLevel","changeRemaining","iterations","imagesArray","indexNum","parseInt","Math","random","undefined","find","el","push","length","makeRandomOrder","someArray","helperArray","i","targetIndex","splice","map","num","index","url","name","clickedEvent","gameLost","App","setCurrentScore","peopleRemaining","setPeopleRemaining","setBestScore","someNum","setSomeNum","scores","prevScore","prevPeople","someInput","childInput","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9721078.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../App.css'\n\nconst Header = props => {\n\n    return (\n        <div>\n            <div className=\"header-container\">\n                <div className=\"logo\">Level <span className='score-num'>{props.level}</span> / 7</div>\n                <div className=\"title\">\n                    <h3>Pop Culture Memory Test</h3>\n                    <h4>True Geniuses Only</h4>\n                </div>\n                <div className=\"score-container\">\n                    <div className=\"score-container-sub\" id=\"current-score\">Current Score:</div> <span className='score-span'>{props.recievedCurrentScore}</span>\n                    <div className=\"score-container-sub\" id=\"people-remaining\">Remaining:</div><span className='score-span'>{props.remainingPeople}</span>\n                    <div className=\"score-container-sub\" id=\"best-score\">Best Score:</div><span className='score-span'>{props.recievedBestScore}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","\n\nexport const Helpers = (() => {\n\n    function createRedScreen() {\n        let main = document.querySelector(\"html\");\n        let redScreen = document.createElement('div');\n        redScreen.setAttribute('style', \"height: 100vh; width: 100vw; position: absolute; top: 0; background-color: red; opacity: 0.7;\");\n\n        main.appendChild(redScreen);\n\n        setTimeout(() => {redScreen.remove()}, 50);\n\n    }\n\n    function minimizeCards() {\n        let cards = document.querySelectorAll('.single-card-container');\n        cards.forEach(card => {\n            card.style.transitionDuration = '125ms';\n            card.style.transform = 'scale(0.5)';\n        })\n        setTimeout(() => {\n            cards.forEach(card => {\n                card.style.transitionDuration = '125ms';\n                card.style.transform = '';\n            })\n        }, 100)\n    }\n\n    return {\n        createRedScreen,\n        minimizeCards\n    }\n\n\n})();\n\n\n// export function createRedScreen() {\n//     let main = document.querySelector(\"html\");\n//     let redScreen = document.createElement('div');\n//     redScreen.setAttribute('style', \"height: 100vh; width: 100vw; position: absolute; top: 0; background-color: red; opacity: 0.7;\");\n\n//     main.appendChild(redScreen);\n\n//     setTimeout(() => {redScreen.remove()}, 100);\n\n// }\n\n//createRedScreen();","import React, {useState, useEffect} from \"react\";\nimport { characterArray } from '../App.js';\nimport { Helpers } from './HelperFuncs.js';\n\n//individual card class\nconst Card = props => {\n\n    const handleClick = async () => {\n        let objArray = JSON.parse(localStorage.getItem(\"memoryObjArray\"));\n        let scoresArray = JSON.parse(localStorage.getItem('memoryScoreArray'));\n        Helpers.minimizeCards();\n        if(objArray[props.number].clicked == false) {\n\n            //update current score and set clicked to true\n            scoresArray.currentScore = scoresArray.currentScore + 1;\n            scoresArray.roundScore = scoresArray.roundScore + 1\n            objArray[props.number].clicked = true;\n\n            //update best score if applicable\n            if(scoresArray.currentScore > scoresArray.bestScore) {\n                scoresArray.bestScore = scoresArray.bestScore + 1;\n                console.log(\"new best triggered\");\n            }\n\n            console.log(scoresArray.roundScore);\n            //set more cards if level has been passed\n            if(scoresArray.roundScore == ((props.level) * 5)) {\n                scoresArray.roundScore = 0;\n                localStorage.setItem('memoryScoreArray', JSON.stringify(scoresArray));\n                localStorage.setItem('memoryObjArray', JSON.stringify(characterArray));\n\n                console.log('level 1 complete');\n                props.levelCleared();\n\n            } else {\n                localStorage.setItem('memoryObjArray', JSON.stringify(objArray));\n                localStorage.setItem('memoryScoreArray', JSON.stringify(scoresArray));\n                props.randomize();\n            }\n        \n            props.firstClick();\n        \n        } else {\n            let counter = ((props.level) * 5) - scoresArray.roundScore;\n          \n            props.secondClick();\n            setTimeout(() => {alert(`Ooof ${props.charName} is has already been selected \\nyou had ${counter} unique options left!`)}, 55);;\n        }\n        \n    }\n\n\n    return (\n        <div onClick={handleClick}>\n            <div className=\"single-card-container\">\n                <div className='card-photo'>\n                    <img className=\"card-photo-img\" src={props.charURL}/>\n                </div>\n                <div className='top-span'></div>\n                <div className=\"card-caption\">{props.charName}</div>\n            </div>\n\n        </div>\n    )\n}\n\n//card container class\nconst CardContainer = props => {\n\n    let arraySize = 38;\n    let numArray = [1, 2, 3, 4, 5]\n    let [orderedArray, setOrderedArray] = useState([]);\n    let [level, setLevel] = useState(1);\n\n    useEffect(() => {\n        getLevelNums();\n        return() => {\n            console.log(\"unmounting...\");\n        }\n    }, [level])\n\n    const updateLevel = () => {\n        console.log('check the level');\n        setLevel(prevLevel => prevLevel + 1);\n        props.changeRemaining(level + 1);\n        console.log('check the level');\n    }\n\n    const getLevelNums = () => {\n        let iterations = level * 5;\n        let imagesArray = [];\n        while (imagesArray.length < iterations) {\n            let indexNum = parseInt(Math.random() * 38);\n            if((imagesArray.find(el => el == indexNum)) ==  undefined) {\n                imagesArray.push(indexNum);\n            }\n        }\n        // console.log(imagesArray);\n        makeRandomOrder(imagesArray);\n    }\n\n\n    const makeRandomOrder = (someArray) => {\n        let helperArray = [];\n        for(let i = 0; i < someArray.length; i++) {\n            let targetIndex;\n            if(i <= numArray.length / 2) {\n                targetIndex = parseInt(Math.random() * helperArray.length);\n            } else {\n                targetIndex = parseInt(Math.random() * helperArray.length) + 1;\n            }\n            \n            helperArray.splice(targetIndex, 0, someArray[i]);\n        }\n        // console.log(helperArray);\n        setOrderedArray(helperArray);\n    }\n\n    return (\n        <div>\n            <div className=\"main-card-container\">\n                {/* <div className='left-column'></div>\n                <div className='right-column'></div> */}\n                {\n                    orderedArray.map((num, index) => {\n                            return <Card number={num} level={level} levelCleared={updateLevel} charURL={characterArray[num].url} charName={characterArray[num].name} \n                            key={index} randomize={() => makeRandomOrder(orderedArray)} firstClick={() =>  props.clickedEvent()} secondClick={() => props.gameLost()} ></Card>\n                    })\n        \n                }\n            </div>\n        </div>\n    )\n}\n\nexport default CardContainer","\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Header from './components/Header'\nimport CardContainer from './components/Card'\nimport { Helpers } from './components/HelperFuncs.js'\n\n\nfunction App() {\n\n  const [currentScore, setCurrentScore] = useState(0);\n  const [peopleRemaining, setPeopleRemaining] = useState(5);\n  const [bestScore, setBestScore] = useState(0);\n  let [someNum, setSomeNum] = useState(1);\n  let [level, setLevel] = useState(1);\n  \n\n  //set local storage for iamges and scores\n  useEffect(() => {\n    localStorage.setItem('memoryObjArray', JSON.stringify(characterArray));\n    let scores = JSON.parse(localStorage.getItem(\"memoryScoreArray\"));\n    console.log(scores);\n   \n   if(scores !== null) {\n     scores.currentScore = 0;\n     scores.roundScore = 0;\n     localStorage.setItem('memoryScoreArray', JSON.stringify(scores));\n     setBestScore(scores.bestScore);\n   } else {\n    localStorage.setItem('memoryScoreArray', JSON.stringify({currentScore: 0, roundScore: 0, bestScore: 0}));\n   }\n  }, [])\n\n  const updateRemaining = (childInput) => {\n    console.log(childInput);\n    setPeopleRemaining(childInput * 5);\n    setLevel(prevLevel => prevLevel + 1);\n    if(level == 7) {\n      alert(\"Congratulations you did It!!!! You have the memory of \\n My Octopus Teacher!\");\n\n      localStorage.setItem('memoryObjArray', JSON.stringify(characterArray));\n      localStorage.setItem('memoryScoreArray', JSON.stringify({currentScore: 0, roundScore: 0, bestScore: bestScore}));\n      setCurrentScore(0);\n      setPeopleRemaining(5);\n      setLevel(1);\n\n      setSomeNum(Math.random() * 1);\n    }\n  }\n\n  //update scores display\n  const onSuccessfullClick = () => {\n    let scores = JSON.parse(localStorage.getItem(\"memoryScoreArray\"));\n    setCurrentScore(prevScore => prevScore + 1);\n    setBestScore(scores.bestScore);\n\n    if(scores.roundScore !== 0) {\n      setPeopleRemaining(prevPeople => prevPeople - 1);\n    }\n  }\n\n  //reset everything\n  const onUnSuccessfullClick = () => {\n    console.log('unsuccessful click entered...');\n    localStorage.setItem('memoryObjArray', JSON.stringify(characterArray));\n    localStorage.setItem('memoryScoreArray', JSON.stringify({currentScore: 0, roundScore: 0, bestScore: bestScore}));\n    setCurrentScore(0);\n    setPeopleRemaining(5);\n    setLevel(1);\n\n    Helpers.createRedScreen();\n\n    setSomeNum(Math.random() * 1);\n    \n  }\n\n  return (\n    <div className=\"total-memory-card\">\n      <Header recievedCurrentScore={currentScore} level={level} recievedBestScore={bestScore} remainingPeople={peopleRemaining}></Header>\n      <CardContainer  gameLost={onUnSuccessfullClick} key={someNum} clickedEvent={onSuccessfullClick} changeRemaining={(someInput) => updateRemaining(someInput)}></CardContainer>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n\nfunction testing() {\n  console.log('testing');\n}\n\nconst dataArray = [\n  {\n      number: 1,\n      clicked: false\n  },\n  {\n      number: 2,\n      clicked: false\n  },\n  {\n      number: 3,\n      clicked: false\n  },\n  {\n      number: 4,\n      clicked: false\n  },\n  {\n      number: 5,\n      clicked: false\n  },\n  {\n      number: 6,\n      clicked: false\n  },\n  {\n      number: 7,\n      clicked: false\n  },\n  {\n      number: 8,\n      clicked: false\n  },\n  {\n      number: 9,\n      clicked: false\n  },\n  {\n      number: 10,\n      clicked: false\n  }\n]\n\nexport const characterArray = [\n  {\n    name: \"Achilles\",\n    url: \"./images/achilles.jpg\",\n    clicked: false\n  },\n  {\n    name: 'Jack Sparrow',\n    url: \"./images/also-jack-sparrow.png\",\n    clicked: false\n  },\n  {\n    name: \"Alvin Kamara\",\n    url: \"./images/alvin-kamara.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Arya Stark\",\n    url: \"./images/arya-stark.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Ash Ketchum\",\n    url: \"./images/ash-ketchum.png\",\n    clicked: false\n  },\n  {\n    name: \"Berry O\",\n    url: \"./images/barrack-obama.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Ben Rickert\",\n    url: \"./images/bigshort-pitt.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Billy Red Sack\",\n    url: \"./images/bill-burr.jpeg\",\n    clicked: false\n  },\n  {\n    name: \"Black Widow\",\n    url: \"./images/black-widow.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Elizabeth Swann\",\n    url: \"./images/elizabeth-swann.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Emily Blunt\",\n    url: \"./images/emily-blunt-edge-of-tomorrow.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Salted Pork\",\n    url: \"./images/gimlie.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Chris Tucker\",\n    url: \"./images/chris-tucker.jpg\",\n    clicked: false\n  },\n  {\n    name: \"National Treasure\",\n    url: \"./images/girl-from-national-treasure.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Godzilla!\",\n    url: \"./images/godzilla.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Hermoine Granger\",\n    url: \"./images/hermoine-granger.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Honest Abe\",\n    url: \"./images/honest-abe.jpeg\",\n    clicked: false\n  },\n  {\n    name: \"Killin Nazis\",\n    url: \"./images/inglorious-bastards-pitt.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Jack Sparrow\",\n    url: \"./images/jack-sparrow.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Jean K Jean\",\n    url: \"./images/jean-k-jean.png\",\n    clicked: false\n  },\n  {\n    name: \"Jessica Day\",\n    url: \"./images/jessica-day.jpeg\",\n    clicked: false\n  },\n  {\n    name: \"My Watch has Ended\",\n    url: \"./images/jon-snow.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Khal Drogo\",\n    url: \"./images/khal-drogo.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Killua\",\n    url: \"./images/killua.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Boi\",\n    url: \"./images/kratos.png\",\n    clicked: false\n  },\n  {\n    name: \"Lady Mormont\",\n    url: \"./images/lady-mormont.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Margaery Tyrell\",\n    url: \"./images/Margaery-Tyrell.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Mikey the Pikey\",\n    url: \"./images/mike-the-pike.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Mr. Smith\",\n    url: \"./images/mr-smith-pitt.jpg\",\n    clicked: false\n  },\n  {\n    name: \"My Octopus Teacher\",\n    url: \"./images/my-octopus-teacher.jpeg\",\n    clicked: false\n  },\n  {\n    name: \"Nasim Pedrad\",\n    url: \"./images/nasim-pedrad.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Nikki Glaser\",\n    url: \"./images/nikki-glaser.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Professor Snape\",\n    url: \"./images/professor-snape.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Middle Aged Man\",\n    url: \"./images/stock-footage-guy.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Tyler Durden\",\n    url: \"./images/tyler-durden.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Winnie the Bish\",\n    url: \"./images/winnie-the-bish.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Ygritte\",\n    url: \"./images/Ygritte.jpg\",\n    clicked: false\n  },\n  {\n    name: \"Mystic Mac\",\n    url: \"./images/conor-mcgregor.jpg\",\n    clicked: false\n  },\n]\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}